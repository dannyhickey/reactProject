{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAEzB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAMC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCWLK,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,OCUFC,EAhBG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAEAA,UAAY,mCACZU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCDLI,EARF,SAACC,GACZ,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCiBAC,G,wDAlBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACGO,MAAQ,CACTC,UAAU,GAHJ,E,qDAMf,SAAkBC,EAAOC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,gEAEJG,KAAKX,MAAMK,a,GAdHQ,cC0DZC,E,kDApDX,aAAc,IAAD,8BACT,gBAoBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SApBzC,EAAKZ,MAAQ,CAETjB,OAAQ,GACR2B,YAAa,IALR,E,qDASb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAM,SAAAG,GACH,EAAKZ,SAAS,CAAEtB,OAAQkC,S,oBAWhC,WAAS,IAAD,EAC4Bb,KAAKJ,MAA7BjB,EADJ,EACIA,OAAQ2B,EADZ,EACYA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAP9B,6C,GAjCMZ,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.141f0a53.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\n    return(\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img  alt=\"robots\" src={`https://robohash.org/${id}?200x200`}></img>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card'\n\nconst CardList = ({robots}) => {\n    return (\n        robots.map((user, i) => {\n            return (\n            <Card \n            key={i} \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email}\n            />\n            );\n        })\n  \n\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  \n    return (\n        <div className='pa2'>\n            <input \n            //className = 'input-reset ba b--black-20 pa2 mb2 db w-100'\n            className = 'pa3 ba b--green bg-lightest-blue'\n            type=\"search\" \n            placeholder=\"search robots\" \n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\n\nexport default SearchBox; ","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n      <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n        {props.children}\n      </div>\n    );\n  };\n  \n  export default Scroll;","\nimport React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n                hasError: false\n            }\n        }\n       componentDidCatch(error, info) {\n            this.setState({hasError: true})\n        }\n        render(){\n            if (this.state.hasError){\n                return <h1>Ooops. Something went wrong...</h1>\n            }\n            return this.props.children;\n        }\n    }\n\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            \n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => {\n            return response.json();\n        })\n        .then (users => {\n            this.setState({ robots: users })\n        });\n    }\n    \n\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value});\n        \n    }\n\n    render(){\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length ?\n            <h1>Loading</h1> :\n        (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                   \n                </Scroll>\n                \n            </div>\n        );\n        }\n\n    }\n   \n\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './robots'\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n "],"sourceRoot":""}